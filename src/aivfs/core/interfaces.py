from abc import ABC, abstractmethod
from pathlib import Path
from typing import Optional, Protocol
from datetime import datetime
from .types import FileMetadata

class IMetadataManager(Protocol):
    """元数据管理器接口"""
    def add_file(self, metadata: FileMetadata) -> None: ...
    def get_file(self, path: str) -> Optional[FileMetadata]: ...
    def remove_file(self, path: str) -> None: ...
    def close(self) -> None: ...

class IFSOperations(Protocol):
    """文件系统操作接口"""
    def create_file(self, path: str, content: str, owner: str, group: str, mode: tuple) -> None: ...
    def copy(self, src: str, dst: str) -> None: ...
    def move(self, src: str, dst: str) -> None: ...
    def remove(self, path: str) -> None: ...